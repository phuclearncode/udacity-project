name: Frontend Continuous Integration

on:
  pull_request:
    branches:
      - main 
  workflow_dispatch:

jobs: 
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: cd starter/frontend && npm ci
      - name: Lint code
        run: cd starter/frontend && npm run lint
  
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run:  cd starter/frontend && npm ci 
      - name: Run tests
        run:  cd starter/frontend && npm test
  
  Build_and_run:
    needs: [Lint, Test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build image and run
        run: |
          cd ./starter/frontend
          docker build --build-arg REACT_APP_BACKEND_URL=http://localhost:5000 . -t mp-frontend:latest 
          docker run -p 3000:3000 --name mp-frontend -d mp-frontend
  
